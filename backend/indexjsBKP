import express from "express";
import mysql from "mysql";
import cors from "cors";
import dotenv from "dotenv";
import multer from "multer";
import path from "path";
dotenv.config();

const app = express();
app.use(cors());
app.use(express.json());
app.use('/uploads', express.static('uploads')); // static folder to serve images

// Setup multer for photo upload
const storage = multer.diskStorage({
  destination: (req, file, cb) => cb(null, 'uploads/'),
  filename: (req, file, cb) =>
    cb(null, Date.now() + path.extname(file.originalname)),
});
const upload = multer({ storage });

// MySQL Connection
const db = mysql.createConnection({
    host: process.env.DB_HOST,
    user: process.env.DB_USER,
    password: process.env.DB_PASS,
    database: process.env.DB_NAME,
});

db.connect((err) => {
    if (err) {
        console.error("Database connection failed:", err);
        return;
    }
    console.log("Connected to MySQL database");
});

// Root Route
app.get("/", (req, res) => {
    res.send("Hello from Express!");
});

// ✅ Test DB Route
app.get("/test-db", (req, res) => {
  db.query("SELECT 1", (err, result) => {
    if (err) {
      console.error("Database test query failed:", err);
      return res.status(500).send("Database connection failed.");
    }
    res.send("✅ Database connection is working!");
  });
});

// Test Table Toute
app.get("/test", (req, res) => {
  db.query("SHOW TABLES", (err, results) => {
      if (err) {
          console.error("Error querying DB:", err);
          return res.status(500).json({ error: "Database error" });
      }
      res.json({ message: "✅ Connected to MySQL", tables: results });
  });
});

// POST route to handle student registration
app.post('/api/students', upload.single('photo'), (req, res) => {
  // 🔍 Debug log for incoming data
  console.log("Incoming form data:", req.body);
  console.log("Uploaded file:", req.file);
  const {
    firstName, lastName, gender, dob, roll,
    bloodGroup, religion, email, StudentClass,
    section, admissionId, phone, bio
  } = req.body;

  const photo = req.file ? req.file.filename : null;

  const query = `
    INSERT INTO add_new_student
    (firstName, lastName, gender, dob, roll, bloodGroup, religion, email, StudentClass, section, admissionId, phone, bio, photo)
    VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
  `;

  db.query(query, [
    firstName, lastName, gender, dob, roll, bloodGroup, religion,
    email, StudentClass, section, admissionId, phone, bio, photo
  ], (err, result) => {
    if (err) {
      console.error('Insert error:', err.sqlMessage || err.message || err);
      return res.status(500).json({ error: err.sqlMessage || 'Database insert failed' });
    }
    res.status(200).json({ message: 'Student added', id: result.insertId });
  });
});


const PORT = process.env.PORT || 5000;
app.listen(PORT, () => console.log(`Server running on port ${PORT}`));
